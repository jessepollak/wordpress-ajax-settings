(function(e,i){var s;return s=i.Model.extend({url:ajaxurl+"?action=ajax_settings_save",parse:function(e,i){return i.form?(this.optionsName=i.name,this.url=ajaxurl+("?action=ajax_settings_save_"+this.optionsName),this.$form=i.form,_.extend(e,this.$form.serializeObject())):void 0},isNew:function(){return!1},update:function(i){var s;return s=e(i),s.is(":checkbox")&&(i.value=s.is(":checked")?1:0),this.saving=!0,this.save(i.name,i.value,{success:this.saveSuccess.bind(this),error:this.saveError.bind(this)})},saveSuccess:function(){return this.saving=!1},saveError:function(e,i){return this.saving=!1,console.log(e,i)},findInput:function(e,i){return null==i&&(i={}),this._is||(this._is={}),this._is[e]||(this._is[e]=this.$form.find("input, select").filter("[name='"+e+"']")),this._is[e]}}),e.fn.serializeObject=function(){var i,s,t,n,r;for(s={},r=e(this).serializeArray(),t=0,n=r.length;n>t;t++)i=r[t],s[i.name]=i.value;return s},s.extend=i.Model.extend,this.AjaxSettingsModel=s}).call(this,jQuery,Backbone);
(function(t,e){var i;return e.emulateHTTP=!0,i=e.View.extend({events:{"change input:not(.ajax-ignore)":"persistChanges","change select:not(.ajax-ignore)":"persistChanges"},modelClass:AjaxSettingsModel,formSelector:ajaxSetOpt.formSelector||'form[action="options.php"]',updatedEls:{},initialize:function(e){return this.opts=e,this.setElement(t(this.formSelector)),this.hide(),this.model=new this.modelClass({},{form:this.$el,parse:!0,name:this.opts.options_name}),this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"change",this.startUpdating),this.listenTo(this.model,"sync",this.updated)},hide:function(){return this.$el.hide()},render:function(){return this.$el.is(":not(:visible)")?this.$el.fadeIn():void 0},persistChanges:function(t){return t.preventDefault(),this.model.update(t.currentTarget)},startUpdating:function(t){var e,i,s,n,a;n=t.changed,a=[];for(i in n)s=n[i],e=this.model.findInput(i),e.val(s),a.push(this.settingUpdateSent(e));return a},updated:function(t){var e,i,s,n;s=t.changed,n=[];for(e in s)i=s[e],n.push(this.settingUpdateSuccess(this.model.findInput(e)));return n},settingUpdateSent:function(e){var i;if(e.length&&!this.updatedEls[e])return i=this.updatedEls[e]=t('<div class="ajax-settings-updated">').css({position:"absolute",left:e.outerWidth()+e.position().left,top:e.position().top,visibility:"hidden"}).insertBefore(e),i.css({visibility:"visible",marginTop:(e.outerHeight()-i.outerHeight())/2})},settingUpdateSuccess:function(t){var e;if(t.length&&this.updatedEls[t])return e=this.updatedEls[t],e.addClass("success"),setTimeout(function(){return e.remove()},1e3),delete this.updatedEls[t]}},{extend:e.View.extend}),this.AjaxSettingsView=i,t(document).ready(function(){var t;return ajaxSetOpt.initialize?(t=""+ajaxSetOpt.options_name+"AjaxSettingsView",window[t]=new i(ajaxSettingsOptions)):void 0}),t.fn.leftPositionWithPadding=function(){var t;return t=this.position().left,t+=this.width(),this.css("padding-left")&&(t+=parseInt(this.css("padding-left"))),this.css("padding-right")&&(t+=parseInt(this.css("padding-right"))),this.css("border-left")&&(t+=parseInt(this.css("border-left"))),this.css("border-right")&&(t+=parseInt(this.css("border-right"))),t}}).call(this,jQuery,Backbone);